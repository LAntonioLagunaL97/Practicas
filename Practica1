Universidad Nacional Autónoma de México
Facultad de Ingeniería
Técnicas de Programación - Ingeniería Mecatrónica
Clases y objetos
No de práctica: 1

Objetivos de aprendizaje

I. Objetivos generales: Entender la diferencia entre clase y objeto.

II. Objetivos específicos:

Aprender a diseñar clases.
Entender el funcionamiento de los constructores.
Identificar los atributos y los métodos.
Aprender a crear objetos.

Introducción
Una clase es una construcción que permite crear tipos personalizados de datos mediante la agrupación de diversas variables,
métodos y eventos. Una clase es como un plano. Define los datos y el comportamiento de un tipo de datos. 
Si la clase no se declara como estática, el código de cliente puede utilizarla mediante la creación de objetos o instancias que 
se asignan a una variable. A través de una clase se define un tipo de objeto, pero no es propiamente un objeto. Un objeto es una entidad
concreta basada en una clase y, a veces, se denomina instancia de una clase. Las clases contienen atributos que son un tipo de datos 
que guarda información y también son considerados como metadatos. Las clases también incluyen métodos, que son bloques de código que 
contienen una serie de instrucciones. Cada vez que se crea un objeto, se llama al constructor de la clase. Una clase puede tener varios 
constructores que toman argumentos diferentes. Los constructores permiten al programador establecer valores predeterminados, limitar
la creación de instancias y escribir código flexible y fácil de leer

Desarrollo

I. Actividad 1 Diseño de una clase

A partir de un objeto real, elija al menos 3 características que lo identifiquen y 2 acciones que definan su comportamiento.
Posteriormente, realice una abstracción para definir una clase o plantilla para ese tipo de objetos, que incluya un mínimo de 
3 atributos de diferentes tipos (enteros, flotantes, cadenas, booleanos, etc.) y al menos 6 métodos que sean necesarios para
escribir/leer los valores de los atributos y/o para interactuar con los objetos. Incluya también al menos 2 constructores para la clase.

Perro
string Tamaño
string Raza
string Sexo
int Peso
string color


II. Actividad 2 Creación de objetos

Mediante la creación de objetos, realice pruebas de escritorio para verificar el funcionamiento correcto de su clase y,
de ser necesario, realice los ajustes y correcciones adecuados. Las pruebas deben incluir, sin limitarse a ello, los siguientes puntos:

Verificación de todos los constructores implementados.
Comprobación de la correcta asignación de valores a cada uno de los atributos definidos.
Verificación de todos los métodos programados.

Clase Perro

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mascota
{
    class Perro
    {
        public string Tamaño;
        public string Raza;
        public string Sexo;
        public int Peso;
        private string color;

        public string Color { get => color; set => color = value; }

        public enum TIPOSDECOMIDA {CROQUETAS,BASURA,AGUA};

        public Perro()
        {
            Raza = "PUG";
            Peso = 25;
            Sexo = "Macho";
            Tamaño = "Mediana";
        }

        public Perro(string raza, int peso, string sexo, string tamaño)
        {
            Raza = raza;
            Peso = peso;
            Sexo = sexo;
            Tamaño = tamaño;
        }

        public void Ladrar()
        {

        }
        public void Correr()
        {

        }
        public bool Comer(int alimento)
        {
            bool res = false;
            if (alimento == (int)TIPOSDECOMIDA.AGUA)
            {
                res= true;
            }
            else if (alimento == (int)TIPOSDECOMIDA.BASURA)
            {
                res= true;
            }
            else if (alimento == (int)TIPOSDECOMIDA.CROQUETAS)
            {

                res= true;
            }
            return res;


        }
        public void Cagar()
        {

        }
    }
}

Main Class

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mascota
{
    class Program
    {
        enum TIPOSDECOMIDA { CROQUETAS, BASURA, AGUA };
        static void Main(string[] args)
        {
            bool alimentado = false;


            Perro Perro1 = new Perro();
            Perro1.Raza = "Boxer";
            Perro1.Peso = 25;
            Perro1.Sexo = "Macho";
            Perro1.Tamaño = "Mediana";


            alimentado = Perro1.Comer((int)TIPOSDECOMIDA.CROQUETAS);

            if (alimentado)
            {
                Console.WriteLine("El Perro " + Perro1.Raza + " Comió " + Convert.ToString(TIPOSDECOMIDA.AGUA));
            }

            Perro Perro2 = new Perro();
            Console.WriteLine("El Perro " + Perro2.Raza + " Comió " + Convert.ToString(TIPOSDECOMIDA.CROQUETAS));

            Perro Perro3 = new Perro("PITBULL", 20, "Hembra", "mediano");
            Console.WriteLine("El Perro " + Perro1.Raza + " Comió " + Convert.ToString(TIPOSDECOMIDA.BASURA));
           // Perro Perro3 = new Perro();
            Perro3.Color = "blanco";
            string colorr = Perro3.Color;

            Console.ReadKey();
        }
    }

}

Bibliografía
CEBALLOS SIERRA, Francisco Javier. Microsoft C#. Curso de programación. México, Alfaomega, 2007
DEITEL, Harvey y Deitel, PAUL. C# Cómo programar. España, Pearson, 2007
LÓPEZ ROMÁN, Leobardo. Metodología de la programación orientada a objetos. México, Alfaomega, 2007
